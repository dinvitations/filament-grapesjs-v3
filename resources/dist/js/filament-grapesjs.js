// resources/js/index.js
document.addEventListener("alpine:init", () => {
  Alpine.data(
    "grapesjs",
    ({ state, statePath, readOnly, tools, minHeight, container, plugins, settings }) => ({
      instance: null,
      state,
      tools,
      plugins,
      settings,
      init() {
        let enabledTools = {};
        let allSettings = {
          height: minHeight + "px",
          container: container ? container : ".filament-grapesjs .grapesjs-wrapper",
          showOffsets: true,
          fromElement: true,
          noticeOnUnload: false,
          storageManager: false,
          loadHtml: state?.html,
          loadCss: state?.css,
          plugins,
          ...settings
        };
        this.instance = grapesjs.init(allSettings);
        this.instance.on("update", (e) => {
          var rawHtml = this.instance.getHtml({
            cleanId: true
          });
          var cssContent = this.instance.getCss();
          var jsContent = this.instance.getJs();
          var extract = rawHtml.match(/<body\b[^>]*>([\s\S]*?)<\/body>/);
          var htmlContent = extract ? extract[1] : rawHtml;
          this.state = {
            html: htmlContent,
            css: cssContent,
            js: jsContent
          };
        });
      }
    })
  );
});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vanMvaW5kZXguanMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2FscGluZTppbml0JywgKCkgPT4ge1xuICAgIEFscGluZS5kYXRhKFxuICAgICAgICBcImdyYXBlc2pzXCIsXG4gICAgICAgICh7IHN0YXRlLCBzdGF0ZVBhdGgsIHJlYWRPbmx5LCB0b29scywgbWluSGVpZ2h0LCBjb250YWluZXIsIHBsdWdpbnMsIHNldHRpbmdzIH0pID0+ICh7XG4gICAgICAgICAgICBpbnN0YW5jZTogbnVsbCxcbiAgICAgICAgICAgIHN0YXRlOiBzdGF0ZSxcbiAgICAgICAgICAgIHRvb2xzOiB0b29scyxcbiAgICAgICAgICAgIHBsdWdpbnM6IHBsdWdpbnMsXG4gICAgICAgICAgICBzZXR0aW5nczogc2V0dGluZ3MsXG4gICAgICAgICAgICBpbml0KCkge1xuICAgICAgICAgICAgICAgIGxldCBlbmFibGVkVG9vbHMgPSB7fTtcblxuICAgICAgICAgICAgICAgIGxldCBhbGxTZXR0aW5ncyA9IHtcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiBtaW5IZWlnaHQgKyAncHgnLFxuICAgICAgICAgICAgICAgICAgICBjb250YWluZXI6IGNvbnRhaW5lciA/IGNvbnRhaW5lciA6IFwiLmZpbGFtZW50LWdyYXBlc2pzIC5ncmFwZXNqcy13cmFwcGVyXCIsXG4gICAgICAgICAgICAgICAgICAgIHNob3dPZmZzZXRzOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBmcm9tRWxlbWVudDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgbm90aWNlT25VbmxvYWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBzdG9yYWdlTWFuYWdlcjogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIGxvYWRIdG1sOiBzdGF0ZT8uaHRtbCxcbiAgICAgICAgICAgICAgICAgICAgbG9hZENzczogc3RhdGU/LmNzcyxcbiAgICAgICAgICAgICAgICAgICAgcGx1Z2luczogcGx1Z2lucyxcbiAgICAgICAgICAgICAgICAgICAgLi4uc2V0dGluZ3NcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5pbnN0YW5jZSA9ICBncmFwZXNqcy5pbml0KCBhbGxTZXR0aW5ncyApO1xuICAgICAgICAgICAgICAgIHRoaXMuaW5zdGFuY2Uub24oJ3VwZGF0ZScsIGUgPT4ge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcmF3SHRtbCA9IHRoaXMuaW5zdGFuY2UuZ2V0SHRtbCh7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGVhbklkOiB0cnVlXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB2YXIgY3NzQ29udGVudCA9IHRoaXMuaW5zdGFuY2UuZ2V0Q3NzKCk7XG4gICAgICAgICAgICAgICAgICAgIHZhciBqc0NvbnRlbnQgPSB0aGlzLmluc3RhbmNlLmdldEpzKCk7XG5cbiAgICAgICAgICAgICAgICAgICAgdmFyIGV4dHJhY3QgPSByYXdIdG1sLm1hdGNoKC88Ym9keVxcYltePl0qPihbXFxzXFxTXSo/KTxcXC9ib2R5Pi8pO1xuICAgICAgICAgICAgICAgICAgICB2YXIgaHRtbENvbnRlbnQgPSBleHRyYWN0ID8gZXh0cmFjdFsxXSA6IHJhd0h0bWw7XG5cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGh0bWw6IGh0bWxDb250ZW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgY3NzOiBjc3NDb250ZW50LFxuICAgICAgICAgICAgICAgICAgICAgICAganM6IGpzQ29udGVudFxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgKVxufSlcbiJdLAogICJtYXBwaW5ncyI6ICI7QUFBQSxTQUFTLGlCQUFpQixlQUFlLE1BQU07QUFDM0MsU0FBTztBQUFBLElBQ0g7QUFBQSxJQUNBLENBQUMsRUFBRSxPQUFPLFdBQVcsVUFBVSxPQUFPLFdBQVcsV0FBVyxTQUFTLFNBQVMsT0FBTztBQUFBLE1BQ2pGLFVBQVU7QUFBQSxNQUNWO0FBQUEsTUFDQTtBQUFBLE1BQ0E7QUFBQSxNQUNBO0FBQUEsTUFDQSxPQUFPO0FBQ0gsWUFBSSxlQUFlLENBQUM7QUFFcEIsWUFBSSxjQUFjO0FBQUEsVUFDZCxRQUFRLFlBQVk7QUFBQSxVQUNwQixXQUFXLFlBQVksWUFBWTtBQUFBLFVBQ25DLGFBQWE7QUFBQSxVQUNiLGFBQWE7QUFBQSxVQUNiLGdCQUFnQjtBQUFBLFVBQ2hCLGdCQUFnQjtBQUFBLFVBQ2hCLFVBQVUsT0FBTztBQUFBLFVBQ2pCLFNBQVMsT0FBTztBQUFBLFVBQ2hCO0FBQUEsVUFDQSxHQUFHO0FBQUEsUUFDUDtBQUNBLGFBQUssV0FBWSxTQUFTLEtBQU0sV0FBWTtBQUM1QyxhQUFLLFNBQVMsR0FBRyxVQUFVLE9BQUs7QUFDNUIsY0FBSSxVQUFVLEtBQUssU0FBUyxRQUFRO0FBQUEsWUFDaEMsU0FBUztBQUFBLFVBQ2IsQ0FBQztBQUNELGNBQUksYUFBYSxLQUFLLFNBQVMsT0FBTztBQUN0QyxjQUFJLFlBQVksS0FBSyxTQUFTLE1BQU07QUFFcEMsY0FBSSxVQUFVLFFBQVEsTUFBTSxpQ0FBaUM7QUFDN0QsY0FBSSxjQUFjLFVBQVUsUUFBUSxDQUFDLElBQUk7QUFFekMsZUFBSyxRQUFRO0FBQUEsWUFDVCxNQUFNO0FBQUEsWUFDTixLQUFLO0FBQUEsWUFDTCxJQUFJO0FBQUEsVUFDUjtBQUFBLFFBQ0osQ0FBQztBQUFBLE1BQ0w7QUFBQSxJQUNKO0FBQUEsRUFDSjtBQUNKLENBQUM7IiwKICAibmFtZXMiOiBbXQp9Cg==
